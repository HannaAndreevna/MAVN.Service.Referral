// <auto-generated />
using System;
using MAVN.Service.Referral.MsSqlRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MAVN.Service.Referral.MsSqlRepositories.Migrations
{
    [DbContext(typeof(ReferralContext))]
    [Migration("20191115150236_HistoryReferralNamePhoneTypes")]
    partial class HistoryReferralNamePhoneTypes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("referral")
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.FriendReferralHistoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid>("ReferredId")
                        .HasColumnName("referred_id");

                    b.Property<Guid>("ReferrerId")
                        .HasColumnName("referrer_id");

                    b.HasKey("Id");

                    b.HasIndex("ReferredId");

                    b.HasIndex("ReferrerId");

                    b.ToTable("friend_referral");
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.OfferToPurchaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid>("ReferId")
                        .HasColumnName("refer_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ReferId");

                    b.ToTable("offer_to_purchase");
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.PropertyPurchaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CommissionNumber")
                        .HasColumnName("commission_number");

                    b.Property<Guid>("ReferralLeadId")
                        .HasColumnName("refer_lead_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ReferralLeadId");

                    b.ToTable("property_purchase");
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.PurchaseReferralHistoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid>("ReferredId")
                        .HasColumnName("referred_id");

                    b.Property<Guid>("ReferrerId")
                        .HasColumnName("referrer_id");

                    b.HasKey("Id");

                    b.HasIndex("ReferredId");

                    b.HasIndex("ReferrerId");

                    b.ToTable("purchase_referral");
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralEntity", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("customer_id");

                    b.Property<string>("ReferralCode")
                        .HasColumnName("referral_code")
                        .HasColumnType("varchar(64)");

                    b.HasKey("CustomerId");

                    b.HasIndex("ReferralCode")
                        .IsUnique()
                        .HasFilter("[referral_code] IS NOT NULL");

                    b.ToTable("customer_referral");
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralHotelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnName("campaign_id");

                    b.Property<string>("ConfirmationToken")
                        .HasColumnName("confirmation_token");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnName("creation_datetime");

                    b.Property<string>("EmailHash")
                        .HasColumnName("email_hash")
                        .HasColumnType("char(64)");

                    b.Property<DateTime>("ExpirationDateTime")
                        .HasColumnName("expiration_datetime");

                    b.Property<string>("FullNameHash")
                        .HasColumnName("name_hash")
                        .HasColumnType("char(64)");

                    b.Property<string>("Location")
                        .HasColumnName("location");

                    b.Property<string>("PartnerId")
                        .HasColumnName("partner_id");

                    b.Property<string>("PhoneNumberHash")
                        .HasColumnName("phone_number_hash")
                        .HasColumnType("char(64)");

                    b.Property<string>("ReferrerId")
                        .HasColumnName("referrer_id");

                    b.Property<bool>("StakeEnabled")
                        .HasColumnName("stake_enabled");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.HasIndex("ConfirmationToken");

                    b.HasIndex("EmailHash");

                    b.HasIndex("ReferrerId");

                    b.ToTable("referral_hotel");
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralLeadEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid>("AgentId")
                        .HasColumnName("agent_id");

                    b.Property<string>("AgentSalesforceId")
                        .HasColumnName("agent_salesforce_id")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnName("campaign_id");

                    b.Property<string>("ConfirmationToken")
                        .HasColumnName("confirmation_token")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnName("creation_datetime");

                    b.Property<string>("EmailHash")
                        .HasColumnName("email_hash")
                        .HasColumnType("char(64)");

                    b.Property<int>("PhoneCountryCodeId")
                        .HasColumnName("phone_country_code_id");

                    b.Property<string>("PhoneNumberHash")
                        .HasColumnName("phone_number_hash")
                        .HasColumnType("char(64)");

                    b.Property<string>("ResponseStatus")
                        .HasColumnName("response_status")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("SalesforceId")
                        .HasColumnName("salesforce_id")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("StakeEnabled")
                        .HasColumnName("stake_enabled");

                    b.Property<int>("State")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.ToTable("referral_lead");
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.FriendReferralHistoryEntity", b =>
                {
                    b.HasOne("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralEntity", "Referred")
                        .WithMany("FriendsReferred")
                        .HasForeignKey("ReferredId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralEntity", "Referrer")
                        .WithMany("FriendReferrers")
                        .HasForeignKey("ReferrerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.OfferToPurchaseEntity", b =>
                {
                    b.HasOne("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralLeadEntity")
                        .WithMany("OffersToPurchase")
                        .HasForeignKey("ReferId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.PropertyPurchaseEntity", b =>
                {
                    b.HasOne("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralLeadEntity")
                        .WithMany("PropertyPurchases")
                        .HasForeignKey("ReferralLeadId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MAVN.Service.Referral.MsSqlRepositories.Entities.PurchaseReferralHistoryEntity", b =>
                {
                    b.HasOne("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralEntity", "Referred")
                        .WithMany("PurchasesReferred")
                        .HasForeignKey("ReferredId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MAVN.Service.Referral.MsSqlRepositories.Entities.ReferralEntity", "Referrer")
                        .WithMany("PurchaseReferrers")
                        .HasForeignKey("ReferrerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
